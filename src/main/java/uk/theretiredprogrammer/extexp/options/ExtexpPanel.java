/*
 * Copyright 2019 richard.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package uk.theretiredprogrammer.extexp.options;

import org.openide.util.NbPreferences;

public final class ExtexpPanel extends javax.swing.JPanel {

    private final ExtexpOptionsPanelController controller;

    ExtexpPanel(ExtexpOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        enableDebug = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        enableVisualEditor = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ExtexpPanel.class, "ExtexpPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(enableDebug, org.openide.util.NbBundle.getMessage(ExtexpPanel.class, "ExtexpPanel.enableDebug.text")); // NOI18N
        enableDebug.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                enableDebugStateChanged(evt);
            }
        });
        enableDebug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableDebugActionPerformed(evt);
            }
        });
        enableDebug.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                enableDebugPropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(ExtexpPanel.class, "ExtexpPanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(enableVisualEditor, org.openide.util.NbBundle.getMessage(ExtexpPanel.class, "ExtexpPanel.enableVisualEditor.text")); // NOI18N
        enableVisualEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enableVisualEditorActionPerformed(evt);
            }
        });
        enableVisualEditor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                enableVisualEditorPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enableDebug)
                    .addComponent(enableVisualEditor))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enableDebug)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enableVisualEditor)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void enableDebugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableDebugActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enableDebugActionPerformed

    private void enableVisualEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableVisualEditorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enableVisualEditorActionPerformed

    private void enableDebugStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_enableDebugStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_enableDebugStateChanged

    private void enableDebugPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_enableDebugPropertyChange
        controller.changed();
    }//GEN-LAST:event_enableDebugPropertyChange

    private void enableVisualEditorPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_enableVisualEditorPropertyChange
        controller.changed();
    }//GEN-LAST:event_enableVisualEditorPropertyChange

    void load() {
        enableDebug.setSelected(NbPreferences.forModule(ExtexpPanel.class).getBoolean("EnableDebug", false));
        enableVisualEditor.setSelected(NbPreferences.forModule(ExtexpPanel.class).getBoolean("EnableVisualEditor", false));
    }

    void store() {
        if (valid()) {
            NbPreferences.forModule(ExtexpPanel.class).putBoolean("EnableDebug", enableDebug.isSelected());
            NbPreferences.forModule(ExtexpPanel.class).putBoolean("EnableVisualEditor", enableVisualEditor.isSelected());
        }
    }

    boolean valid() {
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox enableDebug;
    private javax.swing.JCheckBox enableVisualEditor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
